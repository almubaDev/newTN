# Generated by Django 5.2.1 on 2025-05-26 04:47

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Dirección de correo único para iniciar sesión', max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('nombre', models.CharField(help_text='Nombre completo del usuario', max_length=100, verbose_name='Nombre Completo')),
                ('creditos_disponibles', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Créditos disponibles para usar en la plataforma', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Créditos Disponibles')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Es Staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-date_joined'],
            },
        ),
    ]
